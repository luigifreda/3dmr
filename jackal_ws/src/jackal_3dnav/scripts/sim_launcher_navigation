#!/usr/bin/env bash
# Author: Luigi Freda 

# N.B.: 
# 1) this script is designed just for testing the path planning nodes; no SLAM nodes are called; SLAM is assumed to be faked by a proper V-REP environment
# 2) you can kill all the spawned terminals together by right clicking on the X icon on the left bar and selecting "Quit"


export LAUNCH_GAZEBO=1      # 1 automatic launch of GAZEBO, 0 no automatic launch
export LAUNCH_GAZEBO_MODE=0 # 0 launch GAZEBO in headless mode 
	                          # 1 launch GAZEBO in normal mode 

# ================  Values set by default if none is given ============
# the following worlds are available in the folder "jackal_ws/src/gazebo/jackal/jackal_3dmain/worlds"
# jackal_baylands 
# office

# select the world for the exploration simulation: specify here the world name you want
WORLD_NAME="jackal_baylands.world"

export NUM_ROBOTS=2
echo "NUM_ROBOTS: $NUM_ROBOTS"  
#======================================================================

export XTERM_OPTIONS="-hold -iconic" # the "iconic" option allows to automatically minimize all the launched xterms

########################################################################################################

if [[ -z "${MR3D_HOME}" ]]; then
    echo "ERROR: missing env var MR3D_HOME"
    echo "please, source source_all.bash in the main 3DMR folder"
    exit 
else
    source $MR3D_HOME/source_all.bash
fi

########################################################################################################

if [[ -z "${LAUNCH_GAZEBO_ENV}" ]]; then
  true #using default value
else
  LAUNCH_GAZEBO="${LAUNCH_GAZEBO_ENV}"
  echo "set from env var - LAUNCH_GAZEBO: $LAUNCH_GAZEBO"  
fi

if [[ -z "${LAUNCH_GAZEBO_MODE_ENV}" ]]; then
  true #using default value
else
  LAUNCH_GAZEBO_MODE="${LAUNCH_GAZEBO_MODE_ENV}"
  echo "set from env var - LAUNCH_GAZEBO_MODE: $LAUNCH_GAZEBO_MODE"  
fi

if [[ -z "${ENABLE_MULTI_ROBOT_COORDINATION}" ]]; then
    ENABLE_MULTI_ROBOT_COORDINATION="true"
fi

if [[ -z "${ENABLE_TEB_LOCAL_PLANNER}" ]]; then
    ENABLE_TEB_LOCAL_PLANNER=0
fi

if [[ -z "${ENABLE_VOXBLOX}" ]]; then
    ENABLE_VOXBLOX=0
fi

if [[ -z "${ENABLE_ELEVATION_MAPPING}" ]]; then
    ENABLE_ELEVATION_MAPPING=0
fi

########################################################################################################
#- GAZEBO

if [ $LAUNCH_GAZEBO -eq 1 ]; then
    echo "launching gazebo"
    open_term GAZEBOMAIN "echo gazebo main; roslaunch jackal_3dmain gazebo.launch world_name:=$WORLD_NAME gui:=$LAUNCH_GAZEBO_MODE; bash" &
    rosrun jackal_3dmain wait_for_gazebo.sh
    sleep 10    
    echo "spawning gazebo jackals"
    open_term GAZEBOMODELS "echo jackal_ugvs; roslaunch --wait jackal_3dmain jackal_ugvs.launch OS0:=true imuRate:=360 num_robots:=$NUM_ROBOTS use_rviz:=false; bash" &
    sleep 5
fi

# Connect map to odom 
open_term TF_STATICS "echo tf_statics; roslaunch --wait jackal_3dnav tf_statics.launch; bash" & 
    

########################################################################################################
#- RVIZ

open_term RVIZ "echo rviz; roslaunch --wait jackal_3dnav rviz_sim_path_planning.launch; bash" &


########################################################################################################
#- PATH PLANNERS

for i in `seq 1 $NUM_ROBOTS`; do
  echo launching robot ugv$i 
	rosrun jackal_3dnav sim_launcher_ugv $i $ENABLE_MULTI_ROBOT_COORDINATION $ENABLE_TEB_LOCAL_PLANNER $ENABLE_VOXBLOX $ENABLE_ELEVATION_MAPPING
  sleep 1
done  

########################################################################################################

echo ""
echo "WARNING: At the first launch, gazebo may take a while to warm up... be patient"
echo ""

echo DONE 

# NOTE: you can use the following command to get the xterm window live if the app terminates or crashes
# xterm $XTERM_OPTIONS -e "<you_command>; bash" &

                                                   



