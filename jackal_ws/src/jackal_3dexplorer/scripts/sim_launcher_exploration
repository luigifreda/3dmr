#!/usr/bin/env bash
# Author: Luigi Freda 


echo "usage: ./${0##*/} <world-name> <num-robots> <enable-muti-robot-traversability> <max-sim-time>"

# N.B.: 
# 1) this script is designed just for testing the exploration nodes; no SLAM nodes are called; SLAM is assumed to be faked by a proper V-REP environment
# 2) you can kill all the spawned terminals together by right clicking on the X icon on the left bar and selecting "Quit"


#TODO: import all the other options which are present in the script sim_launcher_patrolling


export LAUNCH_GAZEBO=1      # 1 automatic launch of GAZEBO, 0 no automatic launch
export LAUNCH_GAZEBO_MODE=0 # 0 launch GAZEBO in headless mode 
	                          # 1 launch GAZEBO in normal mode 
	               
export LAUNCH_EXPLORATION_AUTO=1 # for starting automatically the exploration mission (instead of starting by using the GUI)	               

# ================  Values set by default if none is given ============
# the following worlds are available in the folder "jackal_ws/src/gazebo/jackal/jackal_3dmain/worlds"
# jackal_baylands 
# office
# jackal_race

# select the world for the exploration simulation: specify here the world name you want
WORLD_NAME="jackal_race.world"

export NUM_ROBOTS=2
echo "NUM_ROBOTS: $NUM_ROBOTS"  

export ENABLE_MULTI_ROBOT_COORDINATION="true" # true or false  enable/disable multi-robot coordination on path-planning level

export ENABLE_EXPLORATION=1  # enable/disable exploration agent 

export ENABLE_EXPL_POINTCLOUD_FILTER=0 # enable/disable the exploration pointcloud filter, see the discussion in https://github.com/luigifreda/3dmr/blob/main/README.exploration.md#information-gain-configuration-and-issues

export XTERM_OPTIONS="-hold -iconic" # the "iconic" option allows to automatically minimize all the launched xterms

########################################################################################################

# check environment variables 

if [[ -z "${MR3D_HOME}" ]]; then
    echo "ERROR: missing env var MR3D_HOME"
    echo "please, source source_all.bash in the main 3DMR folder"
    exit 
else
    source $MR3D_HOME/source_all.bash
fi

########################################################################################################

if [[ -z "${ENABLE_EXPLORATION_ENV}" ]]; then
  #using default value
  true
else
  ENABLE_EXPLORATION="${ENABLE_EXPLORATION_ENV}"
  echo "set from env var - ENABLE_EXPLORATION: $ENABLE_EXPLORATION"
fi

if [[ -z "${EXPL_AUTO_LAUNCH_ENV}" ]]; then
  #using default value
  true
else
  LAUNCH_EXPLORATION_AUTO="${EXPL_AUTO_LAUNCH_ENV}"
  echo "set from env var - LAUNCH_EXPLORATION_AUTO: $LAUNCH_EXPLORATION_AUTO"
fi

if [[ -z "${LAUNCH_GAZEBO_MODE_ENV}" ]]; then
  #using default value
  true
else
  LAUNCH_GAZEBO_MODE="${LAUNCH_GAZEBO_MODE_ENV}"
  echo "set from env var - LAUNCH_GAZEBO_MODE: $LAUNCH_GAZEBO_MODE"  
fi

if [[ -z "${ENABLE_EXPL_POINTCLOUD_FILTER_ENV}" ]]; then
  #using default value
  true
else
  ENABLE_EXPL_POINTCLOUD_FILTER="${ENABLE_EXPL_POINTCLOUD_FILTER_ENV}"
  echo "set from env var - ENABLE_EXPL_POINTCLOUD_FILTER: $ENABLE_EXPL_POINTCLOUD_FILTER"  
fi

if [[ -z "${ENABLE_ORGANIZED_POINT_CLOUD}" ]]; then
    ENABLE_ORGANIZED_POINT_CLOUD=0
fi


# check if we want to set the world from input and override
export WORLD_NAME_FROM_INPUT=$1
if [[ -n "$WORLD_NAME_FROM_INPUT" ]]; then 
    echo "setting world from input"
    WORLD_NAME=$WORLD_NAME_FROM_INPUT    
fi
echo "WORLD_NAME: $WORLD_NAME"


# check if we set number of robots
export NUM_ROBOTS_INPUT=$2
if [[ -n "$NUM_ROBOTS_INPUT" ]]; then
    echo "set NUM_ROBOTS_INPUT: $NUM_ROBOTS_INPUT"
    NUM_ROBOTS=$NUM_ROBOTS_INPUT
fi
echo "NUM_ROBOTS: $NUM_ROBOTS"


# check if we want to enable/disable multi-robot from input 
export ENABLE_MULTI_ROBOT_COORDINATION_INPUT=$3
if [[ -n "$ENABLE_MULTI_ROBOT_COORDINATION_INPUT" ]]; then
    echo "setting ENABLE_MULTI_ROBOT_COORDINATION_INPUT: $ENABLE_MULTI_ROBOT_COORDINATION_INPUT"
    ENABLE_MULTI_ROBOT_COORDINATION=$ENABLE_MULTI_ROBOT_COORDINATION_INPUT   
fi
echo "ENABLE_MULTI_ROBOT_COORDINATION: $ENABLE_MULTI_ROBOT_COORDINATION"


# check if we set max simulation time
export MAX_SIMULATION_TIME=$4
if [[ -n "$MAX_SIMULATION_TIME" ]]; then 
    echo "set MAX_SIMULATION_TIME: $MAX_SIMULATION_TIME"
fi

########################################################################################################

export EXPLORATION3D_FOLDER=$(rospack find jackal_3dexplorer)
LOGS_FOLDER=$EXPLORATION3D_FOLDER/logs

if [ ! -d $LOGS_FOLDER ] 
then
	mkdir -p $LOGS_FOLDER 
fi

########################################################################################################
#- GAZEBO

if [ $LAUNCH_GAZEBO -eq 1 ]; then
    echo "launching gazebo"
    export ROBOT_INITIAL_POSITION_OPTIONS="x1:=2 y1:=-1 x2:=4 y2:=0"

    open_term GAZEBOMAIN "echo gazebo main; roslaunch jackal_3dmain gazebo.launch world_name:=$WORLD_NAME gui:=$LAUNCH_GAZEBO_MODE; bash" &
    rosrun jackal_3dmain wait_for_gazebo.sh
    sleep 10    
    
    echo "spawning gazebo jackals"
    open_term GAZEBOMODELS "echo jackal_ugvs; roslaunch --wait jackal_3dmain jackal_ugvs.launch $ROBOT_INITIAL_POSITION_OPTIONS OS0:=true imuRate:=360 organize_cloud:=$ENABLE_ORGANIZED_POINT_CLOUD num_robots:=$NUM_ROBOTS use_rviz:=false; bash" &
    sleep 5
fi

# Connect map to odom 
open_term TF_STATICS "echo tf_statics; roslaunch --wait jackal_3dnav tf_statics.launch; bash" & 
    
########################################################################################################
#- RVIZ

open_term RVIZ "echo rviz; roslaunch jackal_3dnav rviz_sim_path_planning.launch; bash" &

sleep 1

########################################################################################################
#- EXPLORATION PLANNERS

for i in `seq 1 $NUM_ROBOTS`; do
	rosrun jackal_3dexplorer sim_launcher_exploration_ugv $i $ENABLE_MULTI_ROBOT_COORDINATION $ENABLE_EXPLORATION $ENABLE_EXPL_POINTCLOUD_FILTER
done  

######################################################################################################## 

if [ $LAUNCH_EXPLORATION_AUTO -eq 1 ] 
then
    echo "starting exploration"
    rostopic pub /expl_pause_topic std_msgs/Bool "data: false" &
fi

if [[ -n "$MAX_SIMULATION_TIME" ]] 
then
    sleep $MAX_SIMULATION_TIME
    echo "killing gazebo simulation"
    $(rospack find jackal_3dexplorer)/kill_gazebo_sim
fi

######################################################################################################## 

echo ""
echo "WARNING: At the first launch, gazebo may take a while to warm up... be patient"
echo ""

echo DONE 

